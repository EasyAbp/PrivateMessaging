# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'
- task: CmdLine@2
  displayName: 'install dotnet-ef'
  inputs:
    script: 'dotnet tool install -g dotnet-ef'

- task: CmdLine@2
  inputs:
    script: |
      echo commands
      sed -i '0,/Default[^,]*/s//$(ConnectionStrings)"/g' host/EasyAbp.PrivateMessaging.Web.Unified/appsettings.json
      echo commands executed

- task: DotNetCoreCLI@2
  displayName: 'restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'build'
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  displayName: 'publish'
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: CmdLine@2
  displayName: 'build efcore migrations'
  inputs:
    script: |
       dotnet ef migrations script --project host/EasyAbp.PrivateMessaging.Web.Unified/EasyAbp.PrivateMessaging.Web.Unified.csproj -o $(Build.ArtifactStagingDirectory)/migrations/scripts.sql -i

- task: PublishBuildArtifacts@1
  displayName: 'publish Artifacts migrations file'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/migrations/scripts.sql'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
- task: Docker@2
  displayName: 'build and push docker'
  inputs:
    containerRegistry: $(DockerRegistry)
    repository: $(repository)
    command: 'buildAndPush'
    Dockerfile: 'host/EasyAbp.PrivateMessaging.Web.Unified/Dockerfile'
    buildContext: .
    tags: 'latest'